<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VNLib.Data.Caching.Extensions</name>
    </assembly>
    <members>
        <member name="T:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions">
            <summary>
            Provides extension methods for FBM data caching using 
            cache servers and brokers
            </summary>
        </member>
        <member name="F:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.CACHE_WS_SUB_PROCOL">
            <summary>
            The websocket sub-protocol to use when connecting to cache servers
            </summary>
        </member>
        <member name="F:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.MAX_FBM_MESSAGE_HEADER_SIZE">
            <summary>
            The default cache message header size
            </summary>
        </member>
        <member name="F:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.CacheJwtAlgorithm">
            <summary>
            The default hashing algorithm used to sign an verify connection
            tokens
            </summary>
        </member>
        <member name="F:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.CacheCurve">
            <summary>
            The default ECCurve used by the connection library
            </summary>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.GetDefaultConfig(VNLib.Utils.Memory.IUnmangedHeap,System.Int32,VNLib.Utils.Logging.ILogProvider)">
            <summary>
            Gets a <see cref="T:VNLib.Net.Messaging.FBM.Client.FBMClientConfig"/> preconfigured object caching
            protocl
            </summary>
            <param name="heap">The client buffer heap</param>
            <param name="maxMessageSize">The maxium message size (in bytes)</param>
            <param name="debugLog">An optional debug log</param>
            <returns>A preconfigured <see cref="T:VNLib.Net.Messaging.FBM.Client.FBMClientConfig"/> for object caching</returns>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ListServersAsync(System.Uri,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <summary>
            Contacts the cache broker to get a list of active servers to connect to
            </summary>
            <param name="brokerAddress">The broker server to connec to</param>
            <param name="clientPrivKey">The private key used to sign messages sent to the broker</param>
            <param name="brokerPubKey">The broker public key used to verify broker messages</param>
            <param name="cancellationToken">A token to cancel the operationS</param>
            <returns>The list of active servers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ListServersAsync(System.Uri,System.Security.Cryptography.ECDsa,System.Security.Cryptography.ECDsa,System.Threading.CancellationToken)">
            <summary>
            Contacts the cache broker to get a list of active servers to connect to
            </summary>
            <param name="brokerAddress">The broker server to connec to</param>
            <param name="clientAlg">The signature algorithm used to sign messages to the broker</param>
            <param name="brokerAlg">The signature used to verify broker messages</param>
            <param name="cancellationToken">A token to cancel the operationS</param>
            <returns>The list of active servers</returns>
            <exception cref="T:System.Security.SecurityException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ConnectAsync(VNLib.Net.Messaging.FBM.Client.FBMClient,System.String,System.ReadOnlyMemory{System.Byte},System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Configures a connection to the remote cache server at the specified location
            with proper authentication.
            </summary>
            <param name="client"></param>
            <param name="serverUri">The server's address</param>
            <param name="signingKey">The pks8 format EC private key uesd to sign the message</param>
            <param name="challenge">A challenge to send to the server</param>
            <param name="nodeId">A token used to identify the current server's event queue on the remote server</param>
            <param name="token">A token to cancel the connection operation</param>
            <param name="useTls">Enables the secure websocket protocol</param>
            <returns>A Task that completes when the connection has been established</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ResgisterWithBrokerAsync(System.Uri,System.ReadOnlyMemory{System.Byte},System.String,System.String,System.String)">
            <summary>
            Registers the current server as active with the specified broker
            </summary>
            <param name="brokerAddress">The address of the broker to register with</param>
            <param name="signingKey">The private key used to sign the message</param>
            <param name="serverAddress">The local address of the current server used for discovery</param>
            <param name="nodeId">The unique id to identify this server (for event queues)</param>
            <param name="keepAliveToken">A unique security token used by the broker to authenticate itself</param>
            <returns>A task that resolves when a successful registration is completed, raises exceptions otherwise</returns>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ImportClientPrivateKey(VNLib.Net.Messaging.FBM.Client.FBMClient,System.ReadOnlySpan{System.Byte})">
            <summary>
            Imports the client signature algorithim's private key from its pkcs8 binary representation
            </summary>
            <param name="client"></param>
            <param name="pkcs8PrivateKey">Pkcs8 format private key</param>
            <returns>Chainable fluent object</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ImportBrokerPublicKey(VNLib.Net.Messaging.FBM.Client.FBMClient,System.ReadOnlySpan{System.Byte})">
            <summary>
            Imports the public key used to verify broker server messages
            </summary>
            <param name="client"></param>
            <param name="spkiPublicKey">The subject-public-key-info formatted broker public key</param>
            <returns>Chainable fluent object</returns>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.Security.Cryptography.CryptographicException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.UseTls(VNLib.Net.Messaging.FBM.Client.FBMClient,System.Boolean)">
            <summary>
            Specifies if all connections should be using TLS
            </summary>
            <param name="client"></param>
            <param name="useTls">A value that indicates if connections should use TLS</param>
            <returns>Chainable fluent object</returns>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.UseBroker(VNLib.Net.Messaging.FBM.Client.FBMClient,System.Uri)">
            <summary>
            Specifies the broker address to discover cache nodes from
            </summary>
            <param name="client"></param>
            <param name="brokerAddress">The address of the server broker</param>
            <returns>Chainable fluent object</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.SetNodeId(VNLib.Net.Messaging.FBM.Client.FBMClient,System.String)">
            <summary>
            Specifies the current server's cluster node id. If this 
            is a server connection attempting to listen for changes on the
            remote server, this id must be set and unique
            </summary>
            <param name="client"></param>
            <param name="nodeId">The cluster node id of the current server</param>
            <returns>Chainable fluent object</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.DiscoverNodesAsync(VNLib.Net.Messaging.FBM.Client.FBMClientWorkerBase,System.Threading.CancellationToken)">
            <summary>
            Discovers cache nodes in the broker configured for the current client.
            </summary>
            <param name="client"></param>
            <param name="token">A token to cancel the discovery</param>
            <returns>A task the resolves the list of active servers on the broker server</returns>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.DiscoverNodesAsync(VNLib.Net.Messaging.FBM.Client.FBMClient,System.Threading.CancellationToken)">
            <summary>
            Discovers cache nodes in the broker configured for the current client.
            </summary>
            <param name="client"></param>
            <param name="token">A token to cancel the discovery </param>
            <returns>A task the resolves the list of active servers on the broker server</returns>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ConnectAndWaitForExitAsync(VNLib.Net.Messaging.FBM.Client.FBMClientWorkerBase,VNLib.Data.Caching.Extensions.ActiveServer,System.Threading.CancellationToken)">
            <summary>
            Connects the client to a remote cache server 
            </summary>
            <param name="client"></param>
            <param name="server">The server to connect to</param>
            <param name="token">A token to cancel the connection and/or wait operation</param>
            <returns>A task that resolves when cancelled or when the connection is lost to the server</returns>
            <exception cref="T:System.OperationCanceledException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.ConnectAndWaitForExitAsync(VNLib.Net.Messaging.FBM.Client.FBMClient,VNLib.Data.Caching.Extensions.ActiveServer,System.Threading.CancellationToken)">
            <summary>
            Connects the client to a remote cache server 
            </summary>
            <param name="client"></param>
            <param name="server">The server to connect to</param>
            <param name="token">A token to cancel the connection and/or wait operation</param>
            <returns>A task that resolves when cancelled or when the connection is lost to the server</returns>
            <exception cref="T:System.OperationCanceledException"></exception>
        </member>
        <member name="M:VNLib.Data.Caching.Extensions.FBMDataCacheExtensions.SelectRandom(System.Collections.Generic.ICollection{VNLib.Data.Caching.Extensions.ActiveServer})">
            <summary>
            Selects a random server from a collection of active servers
            </summary>
            <param name="servers"></param>
            <returns>A server selected at random</returns>
        </member>
    </members>
</doc>
